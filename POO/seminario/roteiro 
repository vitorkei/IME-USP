-- O que é --

Paradigma de programação construído para resolver limitações de POO, visando
  aumentar a modularização e resolver o problema de cross-cutting concern.
  Sua vantagem é o que ela faz: modularizar o código e resolver o problema de
  cross-cutting concern.
  Por outro lado, por ser algo relativamente recente, o desenvolvimento de
  tecnologias sobre o assunto é mais escasso em relação a POO, bem como menos
  pessoas que habilidosas no assunto ou que sequer o conhecem.

Aspecto é uma característica de um programa que está ligada a várias partes dele,
  mas que não está relacionada a sua função principal. Exemplo do que é um
  aspecto é mais claro quando ligado a ideia de cross-cutting concern.

Cross-cutting concern são aspectos que afetam outros interesses (concerns) do programa.
  Esses interesses normalmente não podem ser facilmente separados e encapsulados do
  resto do sistema, tanto do ponto de vista de design quanto de implementação, e que
  podem resultar em duplicação de código (scattering) e dependências significativas
  entre sistemas (tangling). Um exemplo clássico é log de dados. Como quase todos os
  métodos precisam registrar alguns dados em log, as chamadas para a classe de log
  de dados fica espalhada por todo o código, dificultando a manutenção.

-- História --

O termo "programação orientada a aspectos" foi introduzido por Gregor
  Kiczales e sua equipe na Palo Alto Research Company (PARC), conhecida
  como Xerox PARC na época. Sua equipe foi a primeira a desenvolver o
  conceito explícito de POA e uma das linguagens mais populares desse
  paradigma atualmente, o AspectJ, que é uma extensão de Java.

Atualmente, há diversas linguagens que utilizam orientação a aspectos como
  parte de sua estrutura ou como bibliotecas externas, como Python, Racket,
  Ruby, Haskell, C/C++, Lua, dentre outras.

Conceitos semelhantes de paradigma de programação estavam sendo desenvolvidos
  em outros mais ou menos na mesma época, sendo eles o Composition Filters
  Object Model, na Universidade de Twente, Holanda; o Subject-oriented programming,
  na IBM; Feature oriented programming, na Universidade do Texas, e Adaptive
  Programming, na Northern University, dos EUA. Todos esses conceitos foram
  apresentados antes da POA de Gregor.

Atualmente, existe uma conferência anual para discutir sobre o assunto,
  a Conferência Internacional de Desenvolvimento de Software Orientado a
  Aspectos, que teve sua primeira edição em 2002, em Enschede, Holanda.
  A edição de 2017 ocorreu em Dubai, nos Emirados Árabes Unidos, nos dias
  25 e 26 de Setembro. A edição de 2018 ocorrerá no mesmo lugar, nos dias
  24 e 25 de Setembro.

-- Futuro --

O desenvolvimento de software orientado a aspectos (AOSD) é uma área de
  rápido crescimento. Sendo um assunto popular em engenharia de software,
  existe na Europa um grupo de pesquisadores da área financiados pela
  Comissão Europeia, a European Network of Excellence on Aspect-Oriented
  Software Development (AOSD-Europe).


https://en.wikipedia.org/wiki/Aspect-oriented_software_development#History
https://pt.wikipedia.org/wiki/Cross-cutting_concern
https://en.wikipedia.org/wiki/Aspect_%28computer_programming%29
https://en.wikipedia.org/wiki/Aspect-oriented_programming
https://pt.wikipedia.org/wiki/Programa%C3%A7%C3%A3o_orientada_a_aspecto
